/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package at.hephy.Rave;

public class RaveCovariance4D extends RaveCovariance3D {
  private long swigCPtr;

  protected RaveCovariance4D(long cPtr, boolean cMemoryOwn) {
    super(raveJNI.RaveCovariance4D_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RaveCovariance4D obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        raveJNI.delete_RaveCovariance4D(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public RaveCovariance4D(float dxx, float dxy, float dxz, float dxm, float dyy, float dyz, float dym, float dzz, float dzm, float dmm) {
    this(raveJNI.new_RaveCovariance4D__SWIG_0(dxx, dxy, dxz, dxm, dyy, dyz, dym, dzz, dzm, dmm), true);
  }

  public RaveCovariance4D() {
    this(raveJNI.new_RaveCovariance4D__SWIG_1(), true);
  }

  public float dxm() {
    return raveJNI.RaveCovariance4D_dxm(swigCPtr, this);
  }

  public float dym() {
    return raveJNI.RaveCovariance4D_dym(swigCPtr, this);
  }

  public float dzm() {
    return raveJNI.RaveCovariance4D_dzm(swigCPtr, this);
  }

  public float dmm() {
    return raveJNI.RaveCovariance4D_dmm(swigCPtr, this);
  }

  public boolean equal(RaveCovariance4D other) {
    return raveJNI.RaveCovariance4D_equal(swigCPtr, this, RaveCovariance4D.getCPtr(other), other);
  }

}
