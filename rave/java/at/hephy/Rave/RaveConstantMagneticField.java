/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package at.hephy.Rave;

public class RaveConstantMagneticField extends RaveMagneticField {
  private long swigCPtr;

  protected RaveConstantMagneticField(long cPtr, boolean cMemoryOwn) {
    super(raveJNI.RaveConstantMagneticField_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RaveConstantMagneticField obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        raveJNI.delete_RaveConstantMagneticField(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public RavePoint3D inTesla(RavePoint3D arg0) {
    return new RavePoint3D((getClass() == RaveConstantMagneticField.class) ? raveJNI.RaveConstantMagneticField_inTesla(swigCPtr, this, RavePoint3D.getCPtr(arg0), arg0) : raveJNI.RaveConstantMagneticField_inTeslaSwigExplicitRaveConstantMagneticField(swigCPtr, this, RavePoint3D.getCPtr(arg0), arg0), true);
  }

  public RaveMagneticField copy() {
    long cPtr = raveJNI.RaveConstantMagneticField_copy(swigCPtr, this);
    return (cPtr == 0) ? null : new RaveMagneticField(cPtr, false);
  }

  public RaveConstantMagneticField() {
    this(raveJNI.new_RaveConstantMagneticField__SWIG_0(), true);
  }

  public RaveConstantMagneticField(float x, float y, float z) {
    this(raveJNI.new_RaveConstantMagneticField__SWIG_1(x, y, z), true);
  }

  public RaveConstantMagneticField(float z) {
    this(raveJNI.new_RaveConstantMagneticField__SWIG_2(z), true);
  }

}
