/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package at.hephy.Rave;

public class RaveVacuumPropagator extends RavePropagator {
  private long swigCPtr;

  protected RaveVacuumPropagator(long cPtr, boolean cMemoryOwn) {
    super(raveJNI.RaveVacuumPropagator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RaveVacuumPropagator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        raveJNI.delete_RaveVacuumPropagator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    raveJNI.RaveVacuumPropagator_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    raveJNI.RaveVacuumPropagator_change_ownership(this, swigCPtr, true);
  }

  public RaveVacuumPropagator() {
    this(raveJNI.new_RaveVacuumPropagator(), true);
    raveJNI.RaveVacuumPropagator_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public RavePropagator copy() {
    long cPtr = (getClass() == RaveVacuumPropagator.class) ? raveJNI.RaveVacuumPropagator_copy(swigCPtr, this) : raveJNI.RaveVacuumPropagator_copySwigExplicitRaveVacuumPropagator(swigCPtr, this);
    return (cPtr == 0) ? null : new RavePropagator(cPtr, false);
  }

  public RaveTrack closestTo(RaveTrack arg0, RavePoint3D arg1, boolean transverse) {
    return new RaveTrack((getClass() == RaveVacuumPropagator.class) ? raveJNI.RaveVacuumPropagator_closestTo(swigCPtr, this, RaveTrack.getCPtr(arg0), arg0, RavePoint3D.getCPtr(arg1), arg1, transverse) : raveJNI.RaveVacuumPropagator_closestToSwigExplicitRaveVacuumPropagator(swigCPtr, this, RaveTrack.getCPtr(arg0), arg0, RavePoint3D.getCPtr(arg1), arg1, transverse), true);
  }

  public SWIGTYPE_p_std__pairT_rave__Track_double_t to(RaveTrack orig, RavePlane arg1) {
    return new SWIGTYPE_p_std__pairT_rave__Track_double_t((getClass() == RaveVacuumPropagator.class) ? raveJNI.RaveVacuumPropagator_to__SWIG_0(swigCPtr, this, RaveTrack.getCPtr(orig), orig, RavePlane.getCPtr(arg1), arg1) : raveJNI.RaveVacuumPropagator_toSwigExplicitRaveVacuumPropagator__SWIG_0(swigCPtr, this, RaveTrack.getCPtr(orig), orig, RavePlane.getCPtr(arg1), arg1), true);
  }

  public SWIGTYPE_p_std__pairT_rave__Track_double_t to(RaveTrack orig, RaveCylinder arg1) {
    return new SWIGTYPE_p_std__pairT_rave__Track_double_t((getClass() == RaveVacuumPropagator.class) ? raveJNI.RaveVacuumPropagator_to__SWIG_1(swigCPtr, this, RaveTrack.getCPtr(orig), orig, RaveCylinder.getCPtr(arg1), arg1) : raveJNI.RaveVacuumPropagator_toSwigExplicitRaveVacuumPropagator__SWIG_1(swigCPtr, this, RaveTrack.getCPtr(orig), orig, RaveCylinder.getCPtr(arg1), arg1), true);
  }

}
