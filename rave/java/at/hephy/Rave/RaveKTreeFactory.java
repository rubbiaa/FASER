/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package at.hephy.Rave;

public class RaveKTreeFactory {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RaveKTreeFactory(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RaveKTreeFactory obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        raveJNI.delete_RaveKTreeFactory(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public RaveKTreeFactory(RaveMagneticField f, RavePropagator p, int verbosity) {
    this(raveJNI.new_RaveKTreeFactory__SWIG_0(RaveMagneticField.getCPtr(f), f, RavePropagator.getCPtr(p), p, verbosity), true);
  }

  public RaveKTreeFactory(RaveMagneticField f, RavePropagator p) {
    this(raveJNI.new_RaveKTreeFactory__SWIG_1(RaveMagneticField.getCPtr(f), f, RavePropagator.getCPtr(p), p), true);
  }

  public RaveKTreeFactory(RaveMagneticField f) {
    this(raveJNI.new_RaveKTreeFactory__SWIG_2(RaveMagneticField.getCPtr(f), f), true);
  }

  public RaveKTreeFactory() {
    this(raveJNI.new_RaveKTreeFactory__SWIG_3(), true);
  }

  public RaveKTreeFactory(RaveMagneticField f, RavePropagator p, RaveEllipsoid3D beamspot, int verbosity) {
    this(raveJNI.new_RaveKTreeFactory__SWIG_4(RaveMagneticField.getCPtr(f), f, RavePropagator.getCPtr(p), p, RaveEllipsoid3D.getCPtr(beamspot), beamspot, verbosity), true);
  }

  public RaveKTreeFactory(RaveMagneticField f, RavePropagator p, RaveEllipsoid3D beamspot) {
    this(raveJNI.new_RaveKTreeFactory__SWIG_5(RaveMagneticField.getCPtr(f), f, RavePropagator.getCPtr(p), p, RaveEllipsoid3D.getCPtr(beamspot), beamspot), true);
  }

  public RaveKTree useVertexFitter(RaveKParticleContainer particles, String parameters, boolean beamspot) {
    return new RaveKTree(raveJNI.RaveKTreeFactory_useVertexFitter__SWIG_0(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles, parameters, beamspot), true);
  }

  public RaveKTree useVertexFitter(RaveKParticleContainer particles, String parameters) {
    return new RaveKTree(raveJNI.RaveKTreeFactory_useVertexFitter__SWIG_1(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles, parameters), true);
  }

  public RaveKTree useVertexFitter(RaveKParticleContainer particles) {
    return new RaveKTree(raveJNI.RaveKTreeFactory_useVertexFitter__SWIG_2(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles), true);
  }

  public RaveKTree useVertexFitter(RaveKParticleContainer particles, RaveKConstraint cs, String parameters, boolean beamspot) {
    return new RaveKTree(raveJNI.RaveKTreeFactory_useVertexFitter__SWIG_3(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles, RaveKConstraint.getCPtr(cs), cs, parameters, beamspot), true);
  }

  public RaveKTree useVertexFitter(RaveKParticleContainer particles, RaveKConstraint cs, String parameters) {
    return new RaveKTree(raveJNI.RaveKTreeFactory_useVertexFitter__SWIG_4(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles, RaveKConstraint.getCPtr(cs), cs, parameters), true);
  }

  public RaveKTree useVertexFitter(RaveKParticleContainer particles, RaveKConstraint cs) {
    return new RaveKTree(raveJNI.RaveKTreeFactory_useVertexFitter__SWIG_5(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles, RaveKConstraint.getCPtr(cs), cs), true);
  }

  public RaveKTreeContainer useParticleFitterWithTree(RaveKTreeContainer trees, RaveKConstraint cs, String parameters, boolean beamspot) {
    return new RaveKTreeContainer(raveJNI.RaveKTreeFactory_useParticleFitterWithTree__SWIG_0(swigCPtr, this, RaveKTreeContainer.getCPtr(trees), trees, RaveKConstraint.getCPtr(cs), cs, parameters, beamspot), true);
  }

  public RaveKTreeContainer useParticleFitterWithTree(RaveKTreeContainer trees, RaveKConstraint cs, String parameters) {
    return new RaveKTreeContainer(raveJNI.RaveKTreeFactory_useParticleFitterWithTree__SWIG_1(swigCPtr, this, RaveKTreeContainer.getCPtr(trees), trees, RaveKConstraint.getCPtr(cs), cs, parameters), true);
  }

  public RaveKTreeContainer useParticleFitterWithTree(RaveKTreeContainer trees, RaveKConstraint cs) {
    return new RaveKTreeContainer(raveJNI.RaveKTreeFactory_useParticleFitterWithTree__SWIG_2(swigCPtr, this, RaveKTreeContainer.getCPtr(trees), trees, RaveKConstraint.getCPtr(cs), cs), true);
  }

  public RaveKParticleContainer useParticleFitterWithParticle(RaveKParticleContainer particles, RaveKConstraint cs, String parameters, boolean beamspot) {
    return new RaveKParticleContainer(raveJNI.RaveKTreeFactory_useParticleFitterWithParticle__SWIG_0(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles, RaveKConstraint.getCPtr(cs), cs, parameters, beamspot), true);
  }

  public RaveKParticleContainer useParticleFitterWithParticle(RaveKParticleContainer particles, RaveKConstraint cs, String parameters) {
    return new RaveKParticleContainer(raveJNI.RaveKTreeFactory_useParticleFitterWithParticle__SWIG_1(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles, RaveKConstraint.getCPtr(cs), cs, parameters), true);
  }

  public RaveKParticleContainer useParticleFitterWithParticle(RaveKParticleContainer particles, RaveKConstraint cs) {
    return new RaveKParticleContainer(raveJNI.RaveKTreeFactory_useParticleFitterWithParticle__SWIG_2(swigCPtr, this, RaveKParticleContainer.getCPtr(particles), particles, RaveKConstraint.getCPtr(cs), cs), true);
  }

  public RavePropagator getPropagator() {
    return new RavePropagator(raveJNI.RaveKTreeFactory_getPropagator(swigCPtr, this), false);
  }

  public RaveMagneticField getMagneticField() {
    return new RaveMagneticField(raveJNI.RaveKTreeFactory_getMagneticField(swigCPtr, this), false);
  }

  public RaveEllipsoid3D getBeamspot() {
    return new RaveEllipsoid3D(raveJNI.RaveKTreeFactory_getBeamspot(swigCPtr, this), false);
  }

  public boolean hasBeamspot() {
    return raveJNI.RaveKTreeFactory_hasBeamspot(swigCPtr, this);
  }

  public int verbosity() {
    return raveJNI.RaveKTreeFactory_verbosity(swigCPtr, this);
  }

}
