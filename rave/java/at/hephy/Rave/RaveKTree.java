/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package at.hephy.Rave;

public class RaveKTree {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RaveKTree(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RaveKTree obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        raveJNI.delete_RaveKTree(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public RaveKTree(SWIGTYPE_p_rave__BasicKinematicTree arg0) {
    this(raveJNI.new_RaveKTree__SWIG_0(SWIGTYPE_p_rave__BasicKinematicTree.getCPtr(arg0)), true);
  }

  public RaveKTree() {
    this(raveJNI.new_RaveKTree__SWIG_1(), true);
  }

  public boolean isEmpty() {
    return raveJNI.RaveKTree_isEmpty(swigCPtr, this);
  }

  public boolean isConsistent() {
    return raveJNI.RaveKTree_isConsistent(swigCPtr, this);
  }

  public boolean isValid() {
    return raveJNI.RaveKTree_isValid(swigCPtr, this);
  }

  public RaveKParticleContainer finalStateParticles() {
    return new RaveKParticleContainer(raveJNI.RaveKTree_finalStateParticles(swigCPtr, this), true);
  }

  public RaveKParticle topParticle() {
    return new RaveKParticle(raveJNI.RaveKTree_topParticle(swigCPtr, this), true);
  }

  public RaveKVertex currentDecayVertex() {
    return new RaveKVertex(raveJNI.RaveKTree_currentDecayVertex(swigCPtr, this), true);
  }

  public RaveKVertex currentProductionVertex() {
    return new RaveKVertex(raveJNI.RaveKTree_currentProductionVertex(swigCPtr, this), true);
  }

  public RaveKParticle currentParticle() {
    return new RaveKParticle(raveJNI.RaveKTree_currentParticle(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__pairT_bool_rave__KinematicParticle_t motherParticle() {
    return new SWIGTYPE_p_std__pairT_bool_rave__KinematicParticle_t(raveJNI.RaveKTree_motherParticle(swigCPtr, this), true);
  }

  public RaveKParticleContainer daughterParticles() {
    return new RaveKParticleContainer(raveJNI.RaveKTree_daughterParticles(swigCPtr, this), true);
  }

  public void movePointerToTheTop() {
    raveJNI.RaveKTree_movePointerToTheTop(swigCPtr, this);
  }

  public boolean movePointerToTheMother() {
    return raveJNI.RaveKTree_movePointerToTheMother(swigCPtr, this);
  }

  public boolean movePointerToTheFirstChild() {
    return raveJNI.RaveKTree_movePointerToTheFirstChild(swigCPtr, this);
  }

  public boolean movePointerToTheNextChild() {
    return raveJNI.RaveKTree_movePointerToTheNextChild(swigCPtr, this);
  }

  public boolean findParticle(RaveKParticle part) {
    return raveJNI.RaveKTree_findParticle(swigCPtr, this, RaveKParticle.getCPtr(part), part);
  }

  public boolean findDecayVertex(RaveKVertex vert) {
    return raveJNI.RaveKTree_findDecayVertex(swigCPtr, this, RaveKVertex.getCPtr(vert), vert);
  }

  public void unlink() {
    raveJNI.RaveKTree_unlink(swigCPtr, this);
  }

}
